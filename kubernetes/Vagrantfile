# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2204"
  config.vm.hostname = 'ubuntu'

  config.vm.provider "hyperv" do |hyperv|
    hyperv.vmname = "Ubuntu"
    hyperv.cpus = "2"
    hyperv.memory = "2048"
    hyperv.maxmemory = "4096"
    hyperv.enable_enhanced_session_mode = true
  end

  config.vm.network "public_network", bridge: "External Switch"

  config.vm.provision "shell", inline: <<-SHELL
    export OS=xUbuntu_22.04
    export VERSION=1.27

    echo "deb [signed-by=/usr/share/keyrings/libcontainers-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
    echo "deb [signed-by=/usr/share/keyrings/libcontainers-crio-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list

    mkdir -p /usr/share/keyrings
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | gpg --dearmor -o /usr/share/keyrings/libcontainers-archive-keyring.gpg
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/Release.key | gpg --dearmor -o /usr/share/keyrings/libcontainers-crio-archive-keyring.gpg

    apt-get update
    apt-get install -y cri-o cri-o-runc

    systemctl enable crio
    systemctl start crio

    apt-get update
    # apt-transport-https may be a dummy package; if so, you can skip that package
    apt-get install -y apt-transport-https ca-certificates curl gpg

    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.27/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    # This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.27/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

    apt-get update
    apt-get install -y kubelet kubeadm kubectl
    apt-mark hold kubelet kubeadm kubectl

    swapoff -a
    sed -i '/\tswap\t/d' /etc/fstab

    cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
overlay
br_netfilter
EOF

    modprobe overlay
    modprobe br_netfilter

    tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

    sysctl --system

    systemctl stop ufw
    systemctl disable ufw

    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  SHELL

  # config.ssh.username = "ubuntu"
  # config.ssh.private_key_path = "C:\\Users\\admin\\.ssh\\id_ed25519"
  # config.ssh.forward_agent = true
end
